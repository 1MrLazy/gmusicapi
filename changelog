next:
	add UnitTestedApi for use in testing - it makes sure Api is returning what it should
	all classes are now new-style
	add an exception CallFailure. Api functions raise it if the server says their request failed
	add suppress_failure (default False) option to Api.__init__()
	change_playlist now returns the changed playlistId (pid)
	change_song_metadata now returns a list of changed songIds (sids)
	create_playlist now returns the new pid
	delete_playlist now returns the deleted pid
	delete_songs now returns a list of deleted sids
	change_playlist now returns the pid of the playlist - which may differ from the one passed in
	add_songs_to_playlist now returns a list of (sid, new playlistEntryId aka eid) tuples of added songs
	remove_songs_from_playlist now returns a list of removed (sid, eid) pairs
	search dictionary is now flattened, without the "results" key. see documentation for example
	
2012.03.27:
	package for pip/pypi
	add AUTHORS file
	remove session.py; the sessions are now just api.PlaySession (Darryl Pogue)
	protocol.Metadata_Expectations.get_expectation will return UnknownExpectation when queried for unknown keys; this should prevent future problems
	add immutable 'subjectToCuration' and 'metajamId' fields - use unknown
	
2012.03.16:
	add change_playlist for playlist modifications
	get_playlists supports multiple playlists of the same name by returning lists of playlist ids. By default, it will return a single string (the id) for unique playlist names; see the always_id_lists parameter.
	api.login now attempts to bump Music Manager authentication first, bypassing browser emulation. This allows for much faster authentication.
	urls updated for the change to Google Play Music
	remove_songs_from_playlist now takes (playlist_id, song_ids), for consistency with other playlist mutations
	
2012.03.04:
	change name to gmusicapi to avoid ambiguity
	change delete_song and remove_song_from_playlist to delete_songs and remove_songs_from_playlist, for consistency with other functions
	add verification of WC json responses
	setup a sane branch model. see http://nvie.com/posts/a-successful-git-branching-model/
	improve logging
