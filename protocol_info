Protocol Information:

    Calls are made to music.google.com/music/services/<call name>

    Calls also need to send 'u' (I've only seen it =0) and 'xt' (=the same as the cookie) in the url. A sample url:

    	  https://music.google.com/music/services/search?u=0&xt=AM-WbXjYA_Y1LgZx_znahg9rOeIg3aDtWg:<long number>


    == Implemented Calls ==



    addplaylist:
        req: {"title": "<name>"}
	res: {"id":"<new playlist id>","title":"<name>","success":true}

    addtoplaylist:
        req: {"playlistId":"<playlist to add to>","songIds":["<songs to add>"]}
	res: {"playlistId":"<same as above>","songIds":[{"playlistEntryId":"<new id>","songId":"<same as above>"}]}
	
    deleteplaylist:
        req: {"id": "<playlist to delete>"}
	res: {"deleteID": "<id>"}

    loadalltracks:
        Libraries can be big, so GM sends the tracks down in 'chunks'.
        Requests that don't complete the library have 'continuation tokens' required to get the next chunk.

        req: 
           first: {}
	   continuations: {"continuationToken":"<token>"}
        res:
           {"continuation": <True or False>,
	    "continuationToken": "<token if there is a next chunk>",
	    "differentialUpdate": <False - never seen True>,
	    "playlist": [ {<song 1>}, {<song 2>}... ],
	    "playlistID": "all",
	    "requestTime": <some time representation>
	    }

    modifyplaylist:
        req: {"playlistId": "<id>", "playlistName": "<title to change to>"}
	res: {}

    search:
	req: {"q": "<query>"}
	res: {"results":{"artists":[<hits>],"albums":[<hits>],"songs":[<hits>]}}